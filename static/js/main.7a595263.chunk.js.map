{"version":3,"sources":["App.js","index.js"],"names":["getLabels","input","arr","i","length","getCumulative","cumulative","getTotal","generateData","labels","datasets","label","data","fill","backgroundColor","borderColor","GoalRow","this","props","value","max","Math","floor","Component","App","useState","setInput","style","width","height","onClick","addition","random","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAMA,SAASA,EAAUC,GAGjB,IADA,IAAIC,EAAM,GACFC,EAAE,EAAEA,EAAEF,EAAMG,OAAOD,IAEzBD,EAAIC,GAAKA,EAEX,OAAOD,EAGT,SAASG,EAAcJ,GAIrB,IAFA,IAAIC,EAAM,GACNI,EAAa,EACTH,EAAE,EAAEA,EAAEF,EAAMG,OAAOD,IAEzBG,GAAcL,EAAME,GACpBD,EAAIC,GAAKG,EAEX,OAAOJ,EAGT,SAASK,EAASN,GAEhB,IAAIK,EAAaD,EAAcJ,GAC/B,OAAOK,EAAWA,EAAWF,OAAO,GAGtC,SAASI,EAAaP,GAEpB,MAAO,CACLQ,OAAQT,EAAUC,GAClBS,SAAU,CACR,CACEC,MAAO,sBACPC,KAAMP,EAAcJ,GACpBY,MAAM,EACNC,gBAAiB,uBACjBC,YAAa,wB,IAMfC,E,4JAEJ,WAEE,OACE,gCACE,8BAAIC,KAAKC,MAAMC,MAAf,IAAuBF,KAAKC,MAAME,OAClC,8BAAIC,KAAKC,MAAML,KAAKC,MAAMC,MAAMF,KAAKC,MAAME,IAAM,KAAjD,e,GAPcG,aAiCPC,MApBf,WAAgB,IAAD,EACaC,mBAAS,CAAC,IADvB,mBACNxB,EADM,KACCyB,EADD,KASb,OACE,sBAAKC,MAAO,CAACC,MAAM,MAAOC,OAAO,OAAjC,UACE,cAAC,OAAD,CAAMjB,KAAMJ,EAAaP,KACzB,wBAAQ6B,QATZ,WAEE,IAAIC,EAAWV,KAAKC,MAAsB,GAAhBD,KAAKW,UAC/BN,EAASzB,EAAMgC,OAAOF,KAMpB,4BAGA,cAAC,EAAD,CAASZ,MAAOZ,EAASN,GAAQmB,IAAK,WCzE5Cc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.7a595263.chunk.js","sourcesContent":["import './App.css';\nimport { Component } from 'react';\nimport React, {useState} from 'react'\n\nimport {Line} from 'react-chartjs-2';\n\nfunction getLabels(input)\n{\n  let arr = [];\n  for(let i=0;i<input.length;i++)\n  {\n    arr[i] = i;\n  }\n  return arr;\n}\n\nfunction getCumulative(input)\n{\n  let arr = [];\n  let cumulative = 0;\n  for(let i=0;i<input.length;i++)\n  {\n    cumulative += input[i];\n    arr[i] = cumulative;\n  }\n  return arr;\n}\n\nfunction getTotal(input)\n{\n  let cumulative = getCumulative(input);\n  return cumulative[cumulative.length-1];\n}\n\nfunction generateData(input)\n{\n  return { \n    labels: getLabels(input),\n    datasets: [\n      {\n        label: \"Total distance (km)\",\n        data: getCumulative(input),\n        fill: true,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"rgba(75,192,192,1)\"\n      }\n    ]\n  }\n}\n\nclass GoalRow extends Component\n{\n  render()\n  {\n    return(\n      <div>\n        <p>{this.props.value}/{this.props.max}</p>\n        <p>{Math.floor(this.props.value/this.props.max * 100)} %</p>\n      </div>\n    )\n  }\n}\n\nfunction App() {\n  const [input, setInput] = useState([0]);\n\n  function addPoint()\n  {\n    let addition = Math.floor(Math.random() * 30);\n    setInput(input.concat(addition));\n  }\n\n  return (\n    <div style={{width:'40%', height:'40%'}}>\n      <Line data={generateData(input)}/>\n      <button onClick={addPoint}>Add data point\n      </button>\n\n      <GoalRow value={getTotal(input)} max={1400}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}