{"version":3,"sources":["LineGraph.js","InputDataProcessor.js","WebsiteMain.js","index.js"],"names":["getCumulative","input","arr","cumulative","i","length","LineGraphChart","data","this","props","dates","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","options","maintainAspectRatio","Component","InputDataProcessor","entries","it","value","date","push","DataEntry","earliest","Date","earliest_int","Number","date_int","earliestDate","getEarliestDate","latestDate","getLatestDate","daysDifference","getDaysUntil","newDate","setDate","getDate","dateString","toISOString","substring","total","date1","date2","diff","getTime","Math","ceil","AddEntry","console","log","state","textFieldValue","textFieldDate","processItem","className","TextField","id","onChange","event","setState","target","type","defaultValue","InputLabelProps","shrink","Button","variant","color","onClick","addValue","RegisterPerson","processor","WebsiteMain","useState","setInput","setDates","number","parseFloat","isNaN","addDataEntry","processorDates","getDates","processorInput","getAdditionOnDate","getDateLabel","map","index","LineGraph","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAGA,SAASA,EAAcC,GAIrB,IAFA,IAAIC,EAAM,GACNC,EAAa,EACTC,EAAE,EAAEA,EAAEH,EAAMI,OAAOD,IAEzBD,GAAcF,EAAMG,GACpBF,EAAIE,GAAKD,EAEX,OAAOD,E,IAsCMI,E,4JAhBX,WAEI,OACI,cAAC,OAAD,CACEC,MAvBQN,EAuBWO,KAAKC,MAAMF,KAvBfG,EAuBqBF,KAAKC,MAAMC,MArBpD,CACLC,OAAQD,EACRE,SAAU,CACR,CACEC,MAAO,sBACPN,KAAMP,EAAcC,GACpBa,MAAM,EACNC,YAAa,EACbC,gBAAiB,uBACjBC,YAAa,yBAaPC,QAEE,CACEC,qBAAoB,KA3BtC,IAAsBlB,EAAOS,M,GAiBAU,aChCRC,E,WAEjB,aACC,oBACGb,KAAKc,QAAU,GACfd,KAAKe,GAAK,E,gDAGd,SAAaC,EAAOC,GAEhBjB,KAAKc,QAAQI,KAAK,IAAIC,EAAUH,EAAMC,M,6BAG1C,WAKI,IAHA,IAAIG,EAAW,IAAIC,KACfC,EAAeC,OAAOH,GAElBxB,EAAE,EAAEA,EAAEI,KAAKc,QAAQjB,OAAOD,IAClC,CACI,IAAI4B,EAAWD,OAAO,IAAIF,KAAKrB,KAAKc,QAAQlB,GAAGqB,OAC5CO,EAAWF,IAEVA,EAAeE,EACfJ,EAAWpB,KAAKc,QAAQlB,GAAGqB,MAInC,OAAO,IAAII,KAAKD,K,2BAGpB,WAKI,IAHA,IAAIA,EAAW,IAAIC,KACfC,EAAeC,OAAOH,GAElBxB,EAAE,EAAEA,EAAEI,KAAKc,QAAQjB,OAAOD,IAClC,CACI,IAAI4B,EAAWD,OAAO,IAAIF,KAAKrB,KAAKc,QAAQlB,GAAGqB,OAC5CO,EAAWF,IAEVA,EAAeE,EACfJ,EAAWpB,KAAKc,QAAQlB,GAAGqB,MAInC,OAAO,IAAII,KAAKD,K,sBAGpB,WASI,IAPA,IAAI1B,EAAM,GAEN+B,EAAezB,KAAK0B,kBACpBC,EAAa3B,KAAK4B,gBAElBC,EAAiB7B,KAAK8B,aAAaL,EAAcE,GAAc,EAE3D/B,EAAE,EAAEA,EAAEiC,EAAejC,IAC7B,CACI,IAAImC,EAAU,IAAIV,KAAKI,GACvBM,EAAQC,QAAQD,EAAQE,UAAYrC,EAAI,GAExC,IAAIsC,EAAaH,EAAQI,cAAcC,UAAU,EAAG,IAEpD1C,EAAIwB,KAAKgB,GAGb,OAAOxC,I,+BAGX,SAAkBuB,GAId,IAFA,IAAIoB,EAAQ,EAEJzC,EAAE,EAAEA,EAAEI,KAAKc,QAAQjB,OAAOD,IAE3BI,KAAKc,QAAQlB,GAAGqB,OAASA,IAAMoB,GAASrC,KAAKc,QAAQlB,GAAGoB,OAE/D,OAAOqB,I,0BAGX,SAAapB,GAET,OAAOA,I,0BASX,SAAaqB,EAAOC,GAEhB,IAAIC,EAAOD,EAAME,UAAYH,EAAMG,UAEnC,OADWC,KAAKC,KAAKH,EAAK,W,KAK5BrB,EAEF,WAAYH,EAAOC,GAClB,oBACGjB,KAAKgB,MAAQA,EACbhB,KAAKiB,KAAOA,GChGd2B,E,kDAEJ,WAAY3C,GACX,IAAD,6BACE,cAAMA,GAEN4C,QAAQC,IAAI7C,GAEZ,EAAK8C,MACL,CACEC,eAAgB,GAChBC,eAAe,IAAI5B,MAAOc,cAAcC,UAAU,EAAG,KARzD,E,4CAYA,WAEEpC,KAAKC,MAAMiD,YAAYlD,KAAK+C,MAAMC,eAAgBhD,KAAK+C,MAAME,iB,oBAG/D,WACC,IAAD,OACE,OACE,gCACA,qBAAKE,UAAU,cAAf,SACE,sDAEF,sBAAKA,UAAU,cAAf,UACE,cAACC,EAAA,EAAD,CAAWC,GAAG,iBAAiBhD,MAAM,gBACnCiD,SAAU,SAAAC,GAEN,EAAKC,SAAS,CAACR,eAAgBO,EAAME,OAAOzC,WAGlD,cAACoC,EAAA,EAAD,CACAC,GAAG,OACHhD,MAAM,OACNqD,KAAK,OACLC,aAAc3D,KAAK+C,MAAME,cACzBW,gBAAiB,CACfC,QAAQ,GAEVP,SAAU,SAAAC,GAEN,EAAKC,SAAS,CAACP,cAAeM,EAAME,OAAOzC,cAIjD,qBAAKmC,UAAU,cAAf,SACE,cAACW,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAAS,SAAAV,GAE/C,EAAKW,YAFX,mC,GAjDetD,aA2DjBuD,E,4JAEJ,WAEE,OACE,gCACA,qBAAKhB,UAAU,cAAf,SACE,kDAEF,qBAAKA,UAAU,cAAf,SACE,cAACC,EAAA,EAAD,CAAWC,GAAG,iBAAiBhD,MAAM,OAAO0D,QAAQ,eAEtD,qBAAKZ,UAAU,cAAf,SACE,cAACW,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAlC,+B,GAbqBpD,aAsBzBwD,EAAY,IAAIvD,EA0DLwD,MAxDf,WAAwB,IAAD,EACKC,mBAAS,CAAC,IADf,mBACd7E,EADc,KACP8E,EADO,OAEKD,mBAAS,CAAC,KAFf,mBAEdpE,EAFc,KAEPsE,EAFO,KAmCrB,OACA,gCACE,sBAAKrB,UAAU,gBAAf,UACE,qBAAKA,UAAU,cAAf,SACE,cAAC,EAAD,MAEF,cAAC,EAAD,CAAUD,YArCd,SAAsBlC,EAAOC,GAE3B,IAAIwD,EAASC,WAAW1D,GACxB,IAAG2D,MAAMF,GAAT,CAGAL,EAAUQ,aAAaH,EAAQxD,GAM/B,IAHA,IAAI4D,EAAiBT,EAAUU,WAC3BC,EAAiB,GAEbnF,EAAE,EAAEA,EAAEiF,EAAehF,OAAOD,IAElCmF,EAAenF,GAAKwE,EAAUY,kBAAkBH,EAAejF,IAGjE,IAAI,IAAIA,EAAE,EAAEA,EAAEiF,EAAehF,OAAOD,IAElCiF,EAAejF,GAAKwE,EAAUa,aAAaJ,EAAejF,IAG5DiD,QAAQC,IAAI+B,GAEZN,EAASQ,GACTP,EAASK,OAGC,CAAC,EAAE,EAAE,GAWPK,KAAI,SAAClE,EAAOmE,GAAR,OAEN,4FAIN,qBAAKhC,UAAU,iBAAf,SACE,cAACiC,EAAD,CAAgBrF,KAAMN,EAAOS,MAAOA,UC1I1CmF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.4c92738a.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nfunction getCumulative(input)\r\n{\r\n  let arr = [];\r\n  let cumulative = 0;\r\n  for(let i=0;i<input.length;i++)\r\n  {\r\n    cumulative += input[i];\r\n    arr[i] = cumulative;\r\n  }\r\n  return arr;\r\n}\r\n\r\nfunction generateData(input, dates)\r\n{\r\n  return { \r\n    labels: dates,\r\n    datasets: [\r\n      {\r\n        label: \"Total distance (km)\",\r\n        data: getCumulative(input),\r\n        fill: true,\r\n        lineTension: 0,\r\n        backgroundColor: \"rgba(75,192,192,0.2)\",\r\n        borderColor: \"rgba(75,192,192,1)\"\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\nclass LineGraphChart extends Component\r\n{\r\n    render()\r\n    {\r\n        return(\r\n            <Line \r\n              data={generateData(this.props.data, this.props.dates)}\r\n              options =   \r\n              {\r\n                {\r\n                  maintainAspectRatio:false\r\n                }\r\n              }\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default LineGraphChart;","export default class InputDataProcessor\r\n{\r\n    constructor()\r\n    {\r\n        this.entries = [];\r\n        this.it = 0;\r\n    }\r\n\r\n    addDataEntry(value, date)\r\n    {\r\n        this.entries.push(new DataEntry(value,date));\r\n    }\r\n\r\n    getEarliestDate()\r\n    {\r\n        let earliest = new Date();\r\n        let earliest_int = Number(earliest);\r\n\r\n        for(let i=0;i<this.entries.length;i++)\r\n        {\r\n            let date_int = Number(new Date(this.entries[i].date));\r\n            if(date_int < earliest_int) \r\n            {\r\n                earliest_int = date_int;\r\n                earliest = this.entries[i].date;\r\n            }\r\n        }\r\n\r\n        return new Date(earliest);\r\n    }\r\n\r\n    getLatestDate()\r\n    {\r\n        let earliest = new Date();\r\n        let earliest_int = Number(earliest);\r\n\r\n        for(let i=0;i<this.entries.length;i++)\r\n        {\r\n            let date_int = Number(new Date(this.entries[i].date));\r\n            if(date_int > earliest_int) \r\n            {\r\n                earliest_int = date_int;\r\n                earliest = this.entries[i].date;\r\n            }\r\n        }\r\n        \r\n        return new Date(earliest);\r\n    }\r\n\r\n    getDates()\r\n    {\r\n        let arr = [];\r\n\r\n        let earliestDate = this.getEarliestDate();\r\n        let latestDate = this.getLatestDate();\r\n\r\n        let daysDifference = this.getDaysUntil(earliestDate, latestDate) + 3;\r\n\r\n        for(let i=0;i<daysDifference;i++)\r\n        {\r\n            let newDate = new Date(earliestDate);\r\n            newDate.setDate(newDate.getDate() + i - 1);\r\n\r\n            let dateString = newDate.toISOString().substring(0, 10);\r\n\r\n            arr.push(dateString);\r\n        }\r\n\r\n        return arr;\r\n    }\r\n\r\n    getAdditionOnDate(date)\r\n    {\r\n        let total = 0;\r\n\r\n        for(let i=0;i<this.entries.length;i++)\r\n        {       \r\n            if(this.entries[i].date === date) total += this.entries[i].value;\r\n        }\r\n        return total;\r\n    }\r\n\r\n    getDateLabel(date)\r\n    {       \r\n        return date; \r\n        // for(let i=0;i<this.entries.length;i++)\r\n        // {       \r\n        //     if(this.entries[i].date === date) return date;\r\n        // }\r\n\r\n        return \"\";\r\n    }\r\n\r\n    getDaysUntil(date1, date2)\r\n    {\r\n        let diff = date2.getTime() - date1.getTime();\r\n        let days = Math.ceil(diff/(1000*3600*24));\r\n        return days;\r\n    }\r\n}\r\n\r\nclass DataEntry\r\n{\r\n    constructor(value, date)\r\n    {\r\n        this.value = value;\r\n        this.date = date;\r\n    }\r\n}\r\n\r\n","import './WebsiteMain.css';\r\nimport { Component } from 'react';\r\nimport React, {useState} from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport LineGraphChart from './LineGraph'\r\nimport InputDataProcessor from './InputDataProcessor.js';\r\n\r\n\r\nclass AddEntry extends Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n\r\n    console.log(props);\r\n\r\n    this.state =\r\n    {\r\n      textFieldValue: \"\",\r\n      textFieldDate: new Date().toISOString().substring(0, 10)\r\n    };\r\n  }\r\n\r\n  addValue()\r\n  {\r\n    this.props.processItem(this.state.textFieldValue, this.state.textFieldDate);   \r\n  }\r\n\r\n  render()\r\n  {\r\n    return(\r\n      <div>\r\n      <div className=\"StandardDiv\">\r\n        <h3>Add a new distance</h3> \r\n      </div>\r\n      <div className=\"StandardDiv\">\r\n        <TextField id=\"standard-basic\" label=\"Distance (km)\" \r\n          onChange={event => \r\n            {\r\n              this.setState({textFieldValue: event.target.value});\r\n            }}\r\n        />\r\n        <TextField\r\n        id=\"date\"\r\n        label=\"Date\"\r\n        type=\"date\"\r\n        defaultValue={this.state.textFieldDate}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        onChange={event => \r\n          {\r\n            this.setState({textFieldDate: event.target.value});\r\n          }}\r\n      />\r\n      </div>\r\n      <div className=\"StandardDiv\">\r\n        <Button variant=\"contained\" color=\"regular\" onClick={event => \r\n            {\r\n              this.addValue();\r\n            }}>Add distance</Button>\r\n      </div>\r\n      </div>   \r\n    )\r\n  }\r\n}\r\n\r\nclass RegisterPerson extends Component\r\n{\r\n  render()\r\n  {\r\n    return(\r\n      <div>\r\n      <div className=\"StandardDiv\">\r\n        <h2>Personal Entry</h2> \r\n      </div>\r\n      <div className=\"StandardDiv\">\r\n        <TextField id=\"outlined-basic\" label=\"Name\" variant=\"outlined\"/>\r\n      </div>\r\n      <div className=\"StandardDiv\">\r\n        <Button variant=\"contained\" color=\"regular\">Add user</Button>\r\n      </div>\r\n      </div>   \r\n    )\r\n  }\r\n}\r\n\r\n//We need an object that handles all input + date combinations\r\n//These combinations then need to be transformed into a set of labels and inputs for the graph\r\nlet processor = new InputDataProcessor();\r\n\r\nfunction WebsiteMain() {\r\n  const [input, setInput] = useState([0]);\r\n  const [dates, setDates] = useState([\"\"]);\r\n\r\n  function processInput(value, date)\r\n  {\r\n    let number = parseFloat(value);\r\n    if(isNaN(number)) return;\r\n\r\n    //add entry\r\n    processor.addDataEntry(number, date);\r\n\r\n    //create input list for graph\r\n    let processorDates = processor.getDates();\r\n    let processorInput = [];\r\n\r\n    for(let i=0;i<processorDates.length;i++)\r\n    {\r\n      processorInput[i] = processor.getAdditionOnDate(processorDates[i]);\r\n    }\r\n\r\n    for(let i=0;i<processorDates.length;i++)\r\n    {\r\n      processorDates[i] = processor.getDateLabel(processorDates[i]);\r\n    }\r\n\r\n    console.log(processorDates);\r\n\r\n    setInput(processorInput);\r\n    setDates(processorDates);\r\n  }\r\n\r\n  const arr = [1,2,4];\r\n  \r\n\r\n  return (\r\n  <div>\r\n    <div className=\"UserContainer\">\r\n      <div className=\"PersonEntry\">\r\n        <RegisterPerson/>\r\n      </div>\r\n      <AddEntry processItem={processInput}/>\r\n      {\r\n        arr.map((value, index) => \r\n        (\r\n          <p>This is how we can display multiple items dynamically</p>\r\n        ))\r\n      }\r\n    </div>\r\n    <div className=\"GraphContainer\">\r\n      <LineGraphChart data={input} dates={dates}/>\r\n    </div>     \r\n  </div>\r\n  );\r\n}\r\n\r\nexport default WebsiteMain;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport WebsiteMain from './WebsiteMain';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <WebsiteMain />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}