{"version":3,"sources":["LineGraph.js","InputDataProcessor.js","UserData.js","UserCollection.js","SelectionContainer.js","DataContainer.js","WebsiteMain.js","index.js"],"names":["getCumulative","input","arr","cumulative","i","length","LineGraphChart","data","this","props","dates","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","options","maintainAspectRatio","Component","InputDataProcessor","entries","it","value","date","push","DataEntry","earliest","Date","earliest_int","Number","date_int","earliestDate","getEarliestDate","latestDate","getLatestDate","daysDifference","getDaysUntil","newDate","setDate","getDate","dateString","toISOString","substring","total","date1","date2","diff","getTime","Math","ceil","UserData","name","distance","photo","UserCollection","users","userName","setData","userNames","useStyles","makeStyles","theme","root","width","maxWidth","palette","background","paper","default","margin","spacing","section1","section3","SelectionContainer","classes","className","Grid","container","alignItems","item","xs","Typography","gutterBottom","variant","color","InputLabel","Select","style","onChange","event","processUserSelect","target","items","map","index","MenuItem","Divider","DataContainer","useState","user","userCollection","getDataEntry","DataRow","Button","onClick","addDataEntry","textFieldDate","TextField","InputProps","endAdornment","InputAdornment","position","type","defaultValue","processor","WebsiteMain","setInput","setDates","setUser","getUserNames","processItem","number","parseFloat","isNaN","processorDates","getDates","processorInput","getAdditionOnDate","getDateLabel","LineGraph","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.462d1573.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nfunction getCumulative(input)\r\n{\r\n  let arr = [];\r\n  let cumulative = 0;\r\n  for(let i=0;i<input.length;i++)\r\n  {\r\n    cumulative += input[i];\r\n    arr[i] = cumulative;\r\n  }\r\n  return arr;\r\n}\r\n\r\nfunction generateData(input, dates)\r\n{\r\n  return { \r\n    labels: dates,\r\n    datasets: [\r\n      {\r\n        label: \"Total distance (km)\",\r\n        data: getCumulative(input),\r\n        fill: true,\r\n        lineTension: 0,\r\n        backgroundColor: \"rgba(75,192,192,0.2)\",\r\n        borderColor: \"rgba(75,192,192,1)\"\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\nclass LineGraphChart extends Component\r\n{\r\n    render()\r\n    {\r\n        return(\r\n            <Line \r\n              data={generateData(this.props.data, this.props.dates)}\r\n              options =   \r\n              {\r\n                {\r\n                  maintainAspectRatio:false\r\n                }\r\n              }\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default LineGraphChart;","export default class InputDataProcessor\r\n{\r\n    constructor()\r\n    {\r\n        this.entries = [];\r\n        this.it = 0;\r\n    }\r\n\r\n    addDataEntry(value, date)\r\n    {\r\n        this.entries.push(new DataEntry(value,date));\r\n    }\r\n\r\n    getEarliestDate()\r\n    {\r\n        let earliest = new Date();\r\n        let earliest_int = Number(earliest);\r\n\r\n        for(let i=0;i<this.entries.length;i++)\r\n        {\r\n            let date_int = Number(new Date(this.entries[i].date));\r\n            if(date_int < earliest_int) \r\n            {\r\n                earliest_int = date_int;\r\n                earliest = this.entries[i].date;\r\n            }\r\n        }\r\n\r\n        return new Date(earliest);\r\n    }\r\n\r\n    getLatestDate()\r\n    {\r\n        let earliest = new Date();\r\n        let earliest_int = Number(earliest);\r\n\r\n        for(let i=0;i<this.entries.length;i++)\r\n        {\r\n            let date_int = Number(new Date(this.entries[i].date));\r\n            if(date_int > earliest_int) \r\n            {\r\n                earliest_int = date_int;\r\n                earliest = this.entries[i].date;\r\n            }\r\n        }\r\n        \r\n        return new Date(earliest);\r\n    }\r\n\r\n    getDates()\r\n    {\r\n        let arr = [];\r\n\r\n        let earliestDate = this.getEarliestDate();\r\n        let latestDate = this.getLatestDate();\r\n\r\n        let daysDifference = this.getDaysUntil(earliestDate, latestDate) + 3;\r\n\r\n        for(let i=0;i<daysDifference;i++)\r\n        {\r\n            let newDate = new Date(earliestDate);\r\n            newDate.setDate(newDate.getDate() + i - 1);\r\n\r\n            let dateString = newDate.toISOString().substring(0, 10);\r\n\r\n            arr.push(dateString);\r\n        }\r\n\r\n        return arr;\r\n    }\r\n\r\n    getAdditionOnDate(date)\r\n    {\r\n        let total = 0;\r\n\r\n        for(let i=0;i<this.entries.length;i++)\r\n        {       \r\n            if(this.entries[i].date === date) total += this.entries[i].value;\r\n        }\r\n        return total;\r\n    }\r\n\r\n    getDateLabel(date)\r\n    {       \r\n        return date; \r\n\r\n        //this can be used to customize labels based on the input\r\n    }\r\n\r\n    getDaysUntil(date1, date2)\r\n    {\r\n        let diff = date2.getTime() - date1.getTime();\r\n        let days = Math.ceil(diff/(1000*3600*24));\r\n        return days;\r\n    }\r\n}\r\n\r\nclass DataEntry\r\n{\r\n    constructor(value, date)\r\n    {\r\n        this.value = value;\r\n        this.date = date;\r\n    }\r\n}\r\n\r\n","export default class UserData\r\n{\r\n    constructor(name)\r\n    {\r\n        this.name = name;\r\n\r\n        //initialize new array for data\r\n        this.data = [];\r\n    }\r\n\r\n    setData(date, distance, photo)\r\n    {\r\n        this.data.push({date: date, distance: distance, photo: photo});\r\n    }\r\n}","import UserData from './UserData.js'\r\n\r\nexport default class UserCollection\r\n{\r\n    constructor()\r\n    {\r\n        this.users = \r\n        [\r\n            new UserData(\"Joris\"),\r\n            new UserData(\"Minyu\")\r\n        ];\r\n    }\r\n\r\n    addDataEntry(userName, date, distance, photo)\r\n    {\r\n        for(let i=0;i<this.users.length;i++)\r\n        {\r\n            if(this.users[i].name === userName)\r\n            {\r\n                this.users[i].setData(date, distance, photo);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    getDataEntry(userName)\r\n    {\r\n        for(let i=0;i<this.users.length;i++)\r\n        {\r\n            if(this.users[i].name === userName)\r\n            {\r\n                return this.users[i].data;\r\n            }\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    getUserNames()\r\n    {\r\n        const userNames = [];\r\n\r\n        for(let i=0;i<this.users.length;i++)\r\n        {\r\n            userNames.push(this.users[i].name);\r\n        }\r\n        return userNames;\r\n    }\r\n}","import React from 'react';\r\n\r\n//material-ui imports\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    default: {\r\n      margin: theme.spacing(3, 0, 1, 0),\r\n    },\r\n    section1: {\r\n      margin: theme.spacing(3, 2),\r\n    },\r\n    section3: {\r\n      margin: theme.spacing(3, 1, 1),\r\n    },\r\n  }));\r\n  \r\n  export default function SelectionContainer(props) {\r\n    const classes = useStyles();\r\n  \r\n    return (\r\n      <div className={classes.root}>\r\n        <div className={classes.section1}>\r\n          <Grid container alignItems=\"center\">\r\n            <Grid item xs>\r\n              <Typography gutterBottom variant=\"h4\">\r\n                Logging Tool \r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Typography color=\"textSecondary\" variant=\"body2\">\r\n            Select the active user, as only the selected user is able to change their data in the bottom overview\r\n          </Typography>\r\n\r\n          <div className={classes.default}>\r\n          <InputLabel>Select the active user</InputLabel>\r\n          </div>\r\n\r\n          <Select\r\n            style={{ width: 160 }}\r\n            onChange={(event) => {\r\n              props.processUserSelect(event.target.value);\r\n            }}\r\n          >\r\n            {\r\n              props.items.map((value, index) => \r\n              (\r\n                <MenuItem value={value}>{value}</MenuItem>\r\n              ))\r\n            }\r\n          </Select>\r\n        </div>\r\n        <Divider variant=\"middle\" />\r\n      </div>\r\n    );\r\n  }","import React, { useState } from 'react';\r\n\r\n//material-ui imports\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      maxWidth: 500,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    default: {\r\n      margin: theme.spacing(3, 0, 1, 0),\r\n    },\r\n    section1: {\r\n      margin: theme.spacing(3, 2),\r\n    },\r\n    section3: {\r\n      margin: theme.spacing(3, 1, 1),\r\n    },\r\n  }));\r\n\r\nexport default function DataContainer(props) {\r\n  const classes = useStyles();\r\n\r\n  const [entries, setEntries] = useState([]);\r\n\r\n  function addEntry()\r\n  {\r\n    props.userCollection.addDataEntry(props.user, new Date(), 0, \"\");\r\n\r\n    //setEntries(entries.concat(1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.section1}>\r\n        <Typography color=\"textSecondary\" variant=\"body2\">\r\n          Entry overview for {props.user}\r\n        </Typography>\r\n      </div>\r\n      {\r\n        props.userCollection.getDataEntry(props.user).map((value, index) => \r\n        (\r\n          <DataRow/>\r\n        ))\r\n      }\r\n      <div className={classes.section3}>\r\n        <Button color=\"primary\" onClick={addEntry}>Add new entry </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction DataRow(props)\r\n{\r\n  const classes = useStyles();\r\n\r\n  let textFieldValue = \"\";\r\n  let textFieldDate = new Date().toISOString().substring(0, 10);\r\n\r\n  return(\r\n    <div className={classes.root}>\r\n      <div className={classes.section1}>\r\n        <TextField label=\"Distance\" \r\n          InputProps={{\r\n            endAdornment: <InputAdornment position=\"start\">km</InputAdornment>,\r\n          }}\r\n          style={{ width: 140 }}\r\n          onChange={event => \r\n          {\r\n            textFieldValue = event.target.value;\r\n          }}\r\n        />\r\n        <TextField\r\n          type=\"date\"\r\n          defaultValue={textFieldDate}\r\n          style={{ width: 140 }}\r\n          onChange={event => \r\n          {\r\n            textFieldDate = event.target.value;\r\n          }}\r\n        />\r\n      </div>    \r\n    </div>     \r\n  )\r\n}","import './WebsiteMain.css';\r\n\r\n//react imports\r\nimport { Component } from 'react';\r\nimport React, {useState} from 'react'\r\n\r\n//external imports\r\nimport LineGraphChart from './LineGraph'\r\nimport InputDataProcessor from './InputDataProcessor.js';\r\nimport UserCollection from './UserCollection.js'\r\n\r\n//test imports\r\nimport SelectionContainer from './SelectionContainer.js'\r\nimport DataContainer from './DataContainer.js'\r\n\r\n//We need an object that handles all input + date combinations\r\n//These combinations then need to be transformed into a set of labels and inputs for the graph\r\nlet processor = new InputDataProcessor();\r\n\r\nlet userCollection = new UserCollection();\r\n\r\nclass AddEntry extends Component\r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n\r\n    this.state =\r\n    {\r\n      textFieldValue: \"\",\r\n      textFieldDate: new Date().toISOString().substring(0, 10)\r\n    };\r\n  }\r\n\r\n  addValue()\r\n  {\r\n    this.props.processItem(this.state.textFieldValue, this.state.textFieldDate);   \r\n  }\r\n}\r\n\r\nfunction WebsiteMain() {\r\n  const [input, setInput] = useState([0]);\r\n  const [dates, setDates] = useState([\"\"]);\r\n  const [user, setUser] = useState(\"\");\r\n\r\n  function processInput(value, date)\r\n  {\r\n    let number = parseFloat(value);\r\n    if(isNaN(number)) return;\r\n\r\n    //add entry\r\n    processor.addDataEntry(number, date);\r\n\r\n    //create input list for graph\r\n    let processorDates = processor.getDates();\r\n    let processorInput = [];\r\n\r\n    for(let i=0;i<processorDates.length;i++)\r\n    {\r\n      processorInput[i] = processor.getAdditionOnDate(processorDates[i]);\r\n    }\r\n\r\n    for(let i=0;i<processorDates.length;i++)\r\n    {\r\n      processorDates[i] = processor.getDateLabel(processorDates[i]);\r\n    }\r\n\r\n    setInput(processorInput);\r\n    setDates(processorDates);\r\n  }\r\n\r\n  function processUserSelection(userName)\r\n  {\r\n    setUser(userName);\r\n  }\r\n\r\n  return (\r\n  <div>\r\n    <div className=\"UserContainer\">\r\n      <div className=\"PersonEntry\">\r\n        <SelectionContainer items={userCollection.getUserNames()} processUserSelect={processUserSelection}/>\r\n      </div>\r\n      {\r\n        user.length > 0 &&\r\n        <div>\r\n          <DataContainer processItem={processInput} userCollection={userCollection} user={user}/>\r\n        </div>      \r\n      }\r\n    </div>\r\n    <div className=\"GraphContainer\">\r\n      <LineGraphChart data={input} dates={dates}/>\r\n    </div>     \r\n  </div>\r\n  );\r\n}\r\n\r\nexport default WebsiteMain;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport WebsiteMain from './WebsiteMain';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <WebsiteMain />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}